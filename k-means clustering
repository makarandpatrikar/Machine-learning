# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import os
print(os.getcwd())
os.chdir('C:\\Users\\Makrand\\Downloads')

# Importing the dataset
dataset = pd.read_csv('Universities.csv')
dataset

X = dataset.iloc[:, [1,5]].values
X

from sklearn.cluster import KMeans
km = KMeans(n_clusters=4, init='k-means++',max_iter=300,n_init=10,random_state=0)

y_km = km.fit_predict(X)
y_km

plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Cluster 1')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Cluster 1')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Cluster 2')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Cluster 1')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Cluster 2')
plt.scatter(X[y_km==2,0],X[y_km==2,1],c='green',label='Cluster 3')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

#Visualizing the clusters
plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Cluster 1')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Cluster 2')
plt.scatter(X[y_km==2,0],X[y_km==2,1],c='green',label='Cluster 3')
plt.scatter(X[y_km==3,0],X[y_km==3,1],c='cyan',label='Cluster 4')
#plt.scatter(X[y_km==4,0],X[y_km==4,1],c='magneta',label='Cluster 5')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Target First')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Standard Scores')
plt.scatter(X[y_km==2,0],X[y_km==2,1],c='green',label='Careful High Expenses')
plt.scatter(X[y_km==3,0],X[y_km==3,1],c='cyan',label='Target Next')
#plt.scatter(X[y_km==4,0],X[y_km==4,1],c='magneta',label='Cluster 5')
#plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

s1_grps = pd.Series(km.labels_)
s2_univs = dataset.iloc[:,0]
rslt = pd.concat([s1_grps,s2_univs],axis=1)
#DataFrame(dict(s1 = s1_grps, s2 = s2_univs))
rslt

km.cluster_centers_
df = pd.DataFrame(km.cluster_centers_)
df.columns = ('Sat Score','Expenses')
df

s1_grps = pd.Series(km.labels_)
s2_univs = dataset.iloc[:,:]
rslt = pd.concat([s1_grps,s2_univs],axis=1)
rslt

X = dataset.iloc[:, [1,2,3,4,5,6]].values
X

#from sklearn.cluster import KMeans
km = KMeans(n_clusters=5, init='k-means++',max_iter=300,n_init=10,random_state=0)
y_km = km.fit_predict(X)

#Visualizing the clusters
plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Cluster 1')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Cluster 2')
plt.scatter(X[y_km==2,0],X[y_km==2,1],c='green',label='Cluster 3')
plt.scatter(X[y_km==3,0],X[y_km==3,1],c='cyan',label='Cluster 4')
plt.scatter(X[y_km==4,0],X[y_km==4,1],c='pink',label='Cluster 5')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

#Visualizing the clusters
plt.scatter(X[y_km==0,0],X[y_km==0,1],c='red',label='Target')
plt.scatter(X[y_km==1,0],X[y_km==1,1],c='blue',label='Top Level 2')
plt.scatter(X[y_km==2,0],X[y_km==2,1],c='green',label='IITs')
plt.scatter(X[y_km==3,0],X[y_km==3,1],c='cyan',label='Standard')
plt.scatter(X[y_km==4,0],X[y_km==4,1],c='pink',label='Above Average')
#plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of Universities')
plt.legend()
plt.show()

# Using the elbow method to find the num of clusters
wcss = []
for i in range(1,11):
km = KMeans(n_clusters=i, init='k-means++',max_iter=300,n_init=10,random_state=0)
km.fit(X)

wcss.append(km.inertia_)
plt.plot(range(1,11),wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.show()
#***

dataset = pd.read_csv('Mall_Customers.csv')
X = dataset.iloc[:, [3, 4]].values
# Fitting K-Means to the dataset
kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(X)

# Visualising the clusters
plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow',
label = 'Centroids')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()

plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Standard')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Careful')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Sensible')
plt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Careless')
plt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Target')
#plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow',
label = 'Centroids')
plt.title('Clusters of customers')

plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()
s1_grps = pd.Series(kmeans.labels_)
s2_univs = dataset.iloc[:,0]
rslt = pd.concat([s1_grps,s2_univs],axis=1)
rslt

dataset = pd.read_csv('Mall_Customers.csv')
X = dataset.iloc[:, [2, 3, 4]].values
# Fitting K-Means to the dataset
kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(X)
s1_grps = pd.Series(kmeans.labels_)
s2_univs = dataset.iloc[:,0:3]
rslt = pd.concat([s1_grps,s2_univs],axis=1)
kmeans.cluster_centers_
df = pd.DataFrame(kmeans.cluster_centers_)
df
